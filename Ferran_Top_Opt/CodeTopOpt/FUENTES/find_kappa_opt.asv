function [kappa_opt,ww] = find_kappa_opt(element,dim,coordinates,problembsc,...
    gfunc_til_n,phigp_n,phifunct_n,g_nodal_n,norm_g,fixnodes,fext,Msmooth,theta_n,iter,ww,emass)
% Agrupa distintas funciones para encontrar el mejor valor de kappa
% 1a propuesta: método exahustivo, barrido sobre muchos valores

liter = 1; 
kappa_ini = element.material.kappa_ini;
kappa_end = element.material.kappa_end;
lmax = element.material.kappa_maxiter;
vtheta = zeros(lmax,4);

npnod = dim.npnod;
kappas = zeros(npnod,1);
for i=1:npnod
    phi_a = phifunct_n(i);
    phi_b = g_nodal_n(i);
    xa = 0; xb=1; maxiter=100; tol = 1e-8;
    if (phi_a*phi_b < 0) 
        iter=1;
        while ((xb-xa)>tol && iter<=maxiter)
            x = (xb+xa)/2;
            [phi] = update_phifunc(theta_n,x,phifunct_n,g_nodal_n,norm_g);
            phi_i = phi(i);
            if (phi_a*phi_i < 0)
               phi_b = phi_i;
               xb = x; 
            elseif (phi_b*phi_i < 0)
                phi_a = phi_i;
                xa = x;
            end
            iter=iter+1;
        end
        kappas(i) = x;
    end
end







liter = 1; 
kappa_ini = element.material.kappa_ini;
kappa_end = element.material.kappa_end;
lmax = element.material.kappa_maxiter;
vtheta = zeros(lmax,4);
while (liter <= lmax)
    kappa_l = (kappa_end-kappa_ini)*((liter-1)/(lmax-1))+kappa_ini;
    [phi_l] = update_phifunc(theta_n,kappa_l,phifunct_n,g_nodal_n,norm_g);
        
    % solve ku=f,topological derivative, and cost function
    [dummy1,dummy2,dummy3,dummy4,cost_l,theta_l,d_u,tstres,post,vol_omega] = ...
        module_M(phi_l,element,fixnodes,problembsc,coordinates,fext,...
        dim,Msmooth,emass);
    vtheta(liter,1) = liter;
    vtheta(liter,2) = cost_l;
    vtheta(liter,3) = theta_l;
    vtheta(liter,4) = kappa_l;
    vtheta(liter,5) = vol_omega;
    fprintf(1,'LITER: %3.0d COST_L %25.22f THETA_l %d KAPPA %25.19d %25.19d \n',liter,cost_l,theta_l*180/pi,kappa_l,vol_omega);
    liter=liter+1;
    ww(iter,liter,1)=iter;ww(iter,liter,2)=liter;ww(iter,liter,3)=cost_l;
    ww(iter,liter,4)=180*theta_l/pi;ww(iter,liter,5)=kappa_l;ww(iter,liter,6)=vol_omega;
end
[kappa_opt] = compute_kappa_opt(vtheta);

    
end


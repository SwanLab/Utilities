function [integral] = scalar_product(nelem,element,ndime,nnode,...
            coordinatesn,coordinatesa,ptype,f,g )
% compute intgral_omega(f*g)

fg=zeros(1,nelem);
etype = element.type;
npol=0; % grado del polinomio del integrando es 0
[posgp,weigp,ngaus] = cal_posgp_weigp(element.type,ndime,nnode);

for igaus=1:ngaus
    [cartd,djacb] = cal_cartd(igaus,posgp,element,ndime,nnode,nelem,coordinatesn,coordinatesa,ptype);
    dvolu = weigp(igaus)*djacb;
    fg = fg + f(igaus,:).*g(igaus,:).*dvolu';
end
integral=sum(fg);

% % OMMEGA MU 1
% fg=zeros(1,nelem);
% for igaus=1:ngaus
%     e1= (f(igaus,:) < 0);
%     [cartd,djacb] = cal_cartd(igaus,posgp,element,ndime,nnode,nelem,coordinatesn,coordinatesa,ptype);
%     dvolu = weigp(igaus)*djacb;
%     fg(e1) = fg(e1) + f(igaus,e1).*g(igaus,e1).*(dvolu(e1)');
%     f1(igaus,e1) = f(igaus,e1);
%     g1(igaus,e1) = g(igaus,e1);
% end
% integral1=sum(fg);
% 
% 
% 
% % OMMEGA MU 2
% fg=zeros(1,nelem);
% for igaus=1:ngaus
%     e2= (f(igaus,:) > 0);
%     [cartd,djacb] = cal_cartd(igaus,posgp,element,ndime,nnode,nelem,coordinatesn,coordinatesa,ptype);
%     dvolu = weigp(igaus)*djacb;
%     fg(e2) = fg(e2) + f(igaus,e2).*g(igaus,e2).*(dvolu(e2)');
%     f2(igaus,e2) = f(igaus,e2);
%     g2(igaus,e2) = g(igaus,e2);
% end
% integral2=sum(fg);
% intT = integral1+integral2;
% diff = integral-intT;
% 
% 
% keyboard
% 




end

